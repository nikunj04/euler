package com.raval.euler.problems;

/**
 * Created by nikunj on 25/08/17.
 */

import org.apache.commons.lang.StringUtils;

import java.util.function.Supplier;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * <p>
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * <p>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */
public class Solution25 {
    public static void main(String[] args) {
        Supplier<String> fabSeries = new Supplier<String>() {
            String previous = "0";
            String next = "1";

            @Override
            public String get() {
                String _next = sum(previous, next);
                previous = next;
                next = _next;
                return _next;
            }
        };

        int counter = 2;
        String value = "";
        do {
            value = fabSeries.get();
            System.out.println(counter + " " + value);
            counter++;
        } while (value.length() < 1000);
    }


    static String sum(String value1, String value2) {
        value1 = removeLeadingZeros(value1);
        value2 = removeLeadingZeros(value2);
        int maxSize = Integer.max(value1.length(), value2.length()) + 1;
        final char[] valueA = StringUtils.leftPad(value1, maxSize, "0").toCharArray();
        final char[] valueB = StringUtils.leftPad(value2, maxSize, "0").toCharArray();
        final char[] result = new char[maxSize];

        int carry = 0;
        for (int i = maxSize - 1; i >= 0; i--) {
            int sum = carry + Character.getNumericValue(valueA[i]) + Character.getNumericValue(valueB[i]);
            carry = sum / 10;
            result[i] = Character.forDigit(sum % 10, 10);
        }
        return removeLeadingZeros(new String(result));
    }

    static String removeLeadingZeros(String str) {
        return str.replaceFirst("^0+(?!$)", "");
    }
}
