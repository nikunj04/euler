package com.raval.euler.problems;

/**
 * Created by nikunj on 25/08/17.
 */

import java.util.function.LongSupplier;
import java.util.stream.LongStream;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * <p>
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * <p>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */
public class Solution2 {
    public static void main(String[] args) {
        LongSupplier fabSeries = new LongSupplier() {
            long previous = 0;
            long next = 1;

            @Override
            public long getAsLong() {
                long _next = previous + next;
                previous = next;
                next = _next;
                return _next;
            }
        };

        System.out.println(LongStream.generate(fabSeries)
                .limit(100)
                .filter(i -> i < 4000000 && i > 0)
                .filter(i -> i % 2 == 0)
                .sum());
    }
}
